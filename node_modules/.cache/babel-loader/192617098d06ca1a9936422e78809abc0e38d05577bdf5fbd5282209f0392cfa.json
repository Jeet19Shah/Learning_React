{"ast":null,"code":"var _jsxFileName = \"D:\\\\Learning_React\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport Alert from './components/Alert';\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  //Alert\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n  const [mode, setMode] = useState('light');\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      document.body.style.color = 'white';\n      showAlert(\"Dark mode has been enabled\", \"warning\");\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      document.body.style.color = 'black';\n      showAlert(\"Light mode has been enabled\", \"success\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        title: \"TextUtils\",\n        mode: mode,\n        toggleMode: toggleMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        alert: alert\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container my-3\",\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(TextForm, {\n              showAlert: showAlert,\n              heading: \"Enter the text to analyze below\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 42\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/about\",\n            element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 47\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"3PANcZUkwn4FInWWHvNniS2W3SU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","About","Navbar","TextForm","Alert","BrowserRouter","Router","Route","Routes","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","alert","setAlert","showAlert","message","type","msg","setTimeout","mode","setMode","toggleMode","document","body","style","backgroundColor","color","children","title","fileName","_jsxFileName","lineNumber","columnNumber","className","exact","path","element","heading","_c","$RefreshReg$"],"sources":["D:/Learning_React/src/App.js"],"sourcesContent":["import { useState } from 'react';\r\nimport './App.css';\r\nimport About from './components/About';\r\nimport Navbar from './components/Navbar';\r\nimport TextForm from './components/TextForm';\r\nimport Alert from './components/Alert';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Routes,\r\n} from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  //Alert\r\n  const [alert, setAlert] = useState(null);\r\n  const showAlert = (message, type) => {\r\n    setAlert({\r\n      msg:message,\r\n      type:type\r\n    });\r\n    setTimeout(() => {\r\n      setAlert(null);\r\n    }, 1500);\r\n  }\r\n\r\n  const [mode, setMode] = useState('light');\r\n\r\n  const toggleMode = () => {\r\n    if(mode === 'light'){\r\n      setMode('dark');\r\n      document.body.style.backgroundColor = '#042743';\r\n      document.body.style.color = 'white';\r\n      showAlert(\"Dark mode has been enabled\",\"warning\");\r\n    }\r\n    else{\r\n      setMode('light');\r\n      document.body.style.backgroundColor = 'white';\r\n      document.body.style.color = 'black';\r\n      showAlert(\"Light mode has been enabled\",\"success\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <Router>\r\n      <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode}/>\r\n      <Alert alert={alert}/>\r\n      <div className=\"container my-3\">\r\n        <Routes>\r\n          <Route exact path=\"/\" element={<TextForm showAlert={showAlert} heading=\"Enter the text to analyze below\" />} />\r\n          <Route exact path=\"/about\" element={<About />} />\r\n        </Routes>\r\n      </div>\r\n    </Router>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,WAAW;AAClB,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,KAAK,MAAM,oBAAoB;AACtC,SACEC,aAAa,IAAIC,MAAM,EACvBC,KAAK,EACLC,MAAM,QACD,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAMiB,SAAS,GAAGA,CAACC,OAAO,EAAEC,IAAI,KAAK;IACnCH,QAAQ,CAAC;MACPI,GAAG,EAACF,OAAO;MACXC,IAAI,EAACA;IACP,CAAC,CAAC;IACFE,UAAU,CAAC,MAAM;MACfL,QAAQ,CAAC,IAAI,CAAC;IAChB,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EAED,MAAM,CAACM,IAAI,EAAEC,OAAO,CAAC,GAAGvB,QAAQ,CAAC,OAAO,CAAC;EAEzC,MAAMwB,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAGF,IAAI,KAAK,OAAO,EAAC;MAClBC,OAAO,CAAC,MAAM,CAAC;MACfE,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,SAAS;MAC/CH,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACE,KAAK,GAAG,OAAO;MACnCZ,SAAS,CAAC,4BAA4B,EAAC,SAAS,CAAC;IACnD,CAAC,MACG;MACFM,OAAO,CAAC,OAAO,CAAC;MAChBE,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,OAAO;MAC7CH,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACE,KAAK,GAAG,OAAO;MACnCZ,SAAS,CAAC,6BAA6B,EAAC,SAAS,CAAC;IACpD;EACF,CAAC;EAED,oBACEP,OAAA,CAAAE,SAAA;IAAAkB,QAAA,eACApB,OAAA,CAACJ,MAAM;MAAAwB,QAAA,gBACLpB,OAAA,CAACR,MAAM;QAAC6B,KAAK,EAAC,WAAW;QAACT,IAAI,EAAEA,IAAK;QAACE,UAAU,EAAEA;MAAW;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAC/DzB,OAAA,CAACN,KAAK;QAACW,KAAK,EAAEA;MAAM;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACtBzB,OAAA;QAAK0B,SAAS,EAAC,gBAAgB;QAAAN,QAAA,eAC7BpB,OAAA,CAACF,MAAM;UAAAsB,QAAA,gBACLpB,OAAA,CAACH,KAAK;YAAC8B,KAAK;YAACC,IAAI,EAAC,GAAG;YAACC,OAAO,eAAE7B,OAAA,CAACP,QAAQ;cAACc,SAAS,EAAEA,SAAU;cAACuB,OAAO,EAAC;YAAiC;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAE;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC/GzB,OAAA,CAACH,KAAK;YAAC8B,KAAK;YAACC,IAAI,EAAC,QAAQ;YAACC,OAAO,eAAE7B,OAAA,CAACT,KAAK;cAAA+B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAE;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3C;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC,gBACP,CAAC;AAEP;AAACrB,EAAA,CA5CQD,GAAG;AAAA4B,EAAA,GAAH5B,GAAG;AA8CZ,eAAeA,GAAG;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}